plugins {
    // Apply the groovy Plugin to add support for Groovy
    id 'java'

    // Apply the jacoco code coverage plugin
    id 'jacoco'

    // Apply the CheckStyle Plugin
    //id "checkstyle"

    // Apply the PMD Plugin
    //id "pmd"

    // Licensing Plugin
    id "com.github.hierynomus.license-base"

    // Lombok Gradle Plugin
    id "io.freefair.lombok"

    // PITest Gradle Plugin
    id 'info.solidsoft.pitest'
}

repositories {
    mavenCentral()
}

dependencies {
    // Testing Dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.8.2'
    testImplementation 'org.testng:testng:7.6.0'
    testImplementation 'org.assertj:assertj-core:3.21.0'
    testImplementation 'org.mockito:mockito-core:4.6.1'
    testImplementation 'org.pitest:pitest-parent:1.1.10'

    // Apache Commons Dependencies
    implementation 'org.apache.logging.log4j:log4j-api:2.17.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.1'
    implementation 'org.apache.commons:commons-exec:1.3'
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'org.apache.commons:commons-text:1.9'
    implementation 'commons-io:commons-io:2.11.0'
    implementation 'org.apache.commons:commons-lang3:3.11'
    implementation 'org.apache.commons:commons-math3:3.6.1'
    implementation 'org.apache.poi:poi:5.2.2'

    // Google Dependencies
    implementation 'com.google.code.gson:gson:2.9.0'
    implementation 'com.google.guava:guava:30.1.1-jre'
    implementation 'com.google.inject:guice:4.2.0'
    implementation 'com.google.inject.extensions:guice-persist:4.2.0'

    // XML, YAML, and JSON
    implementation 'com.thoughtworks.xstream:xstream:1.4.19'
    implementation 'org.yaml:snakeyaml:1.25'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.12.3'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.3'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.3'
    // implementation 'org.jdom:jdom2:2.0.6.1'
    implementation 'org.jdom:jdom:1.1.3'

    // Annotations
    implementation 'org.eclipse.jdt:org.eclipse.jdt.annotation:2.1.0'
    implementation 'org.jetbrains:annotations:15.0'

    // Lombok Extras
    runtimeOnly 'com.github.peichhorn:lombok-pg:0.11.3'

    implementation 'org.huoc:cofoja:1.3.1'
}

javadoc {
    source = sourceSets.main.allJava
    //classpath = configurations.implementation
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}

jacoco {
    reportsDirectory = file("$buildDir/jacoco")
}

test {
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                counter = 'LINE'
                value = 'COVEREDRATIO'
                minimum = 0.85
            }
        }
    }
}

license {
    header = project.file('LICENSE')
}

pitest {
    threads = 4
    outputFormats = ['XML', 'HTML']
    timestampedReports = false
    junit5PluginVersion = '0.15'
}

// spotbugsMain {
//     reports {
//         html {
//             enabled = true
//             destination = file("$buildDir/reports/spotbugs/main/spotbugs.html")
//             stylesheet = 'fancy-hist.xsl'
//         }
//     }
// }

// pmd {
//   consoleOutput = true
//   //toolVersion = "6.21.0"
//   rulesMinimumPriority = 5
//   ruleSets = [
//     "category/java/errorprone.xml",
//     "category/java/bestpractices.xml"
//   ]
// }

// checkstyle {
//     toolVersion '8.40'
//     configFile file("${rootDir}/config/checkstyle/checkstyle.xml")
// }
//
// checkstyleMain {
//     source = "${projectDir}/src/main/java"
// }
